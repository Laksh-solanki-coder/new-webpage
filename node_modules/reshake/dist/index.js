var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import Shake from './Shake';
import Shaking from './Shaking';
import shakes from './shakes';
export { default as Shake } from './Shake';
export { default as Shaking } from './Shaking';
export { default as shakes } from './shakes';
export var ShakeLittle = function (props) { return (_jsx(Shaking, __assign({}, props, { type: "little" }))); };
export var ShakeSlow = function (props) { return (_jsx(Shaking, __assign({}, props, { type: "slow" }))); };
export var ShakeHard = function (props) { return (_jsx(Shaking, __assign({}, props, { type: "hard" }))); };
export var ShakeHorizontal = function (props) { return (_jsx(Shaking, __assign({}, props, { type: "horizontal" }))); };
export var ShakeVertical = function (props) { return (_jsx(Shaking, __assign({}, props, { type: "vertical" }))); };
export var ShakeRotate = function (props) { return (_jsx(Shaking, __assign({}, props, { type: "rotate" }))); };
export var ShakeCrazy = function (props) { return (_jsx(Shaking, __assign({}, props, { type: "crazy" }))); };
export default {
    Shake: Shake,
    Shaking: Shaking,
    shakes: shakes,
    ShakeLittle: ShakeLittle,
    ShakeSlow: ShakeSlow,
    ShakeHard: ShakeHard,
    ShakeHorizontal: ShakeHorizontal,
    ShakeVertical: ShakeVertical,
    ShakeRotate: ShakeRotate,
    ShakeCrazy: ShakeCrazy,
};
